---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
/*
import type { GetStaticPaths } from "astro";
export const getStaticPaths = (() => {
    
    return [];
}) satisfies GetStaticPaths;
*/

export async function getStaticPaths() {
    const posts = await Astro.glob('../posts/*.md');
    return [
        { params: { tag: 'astro' }, props: { posts } },
        { params: { tag: 'blogging' }, props: { posts } },
        { params: { tag: 'learning-in-public' }, props: { posts } },
        { params: { tag: 'success' }, props: { posts } },
        { params: { tag: 'setbacks' }, props: { posts } },
        { params: { tag: 'community' }, props: { posts } },
        { params: { tag: 'dololo' }, props: { posts } },
    ];
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const taggedPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
    <p>Posts with {tag}</p>
    {
        taggedPosts.length > 0 ? (
            taggedPosts.map((post) => (
                <ul>
                    <li>
                        <BlogPost url={post.url} title={post.frontmatter.title} date={post.frontmatter.pubDate} />
                    </li>
                </ul>
            ))
        ) : (
            <p>
                <em>Nada</em>
            </p>
        )
    }
</BaseLayout>
